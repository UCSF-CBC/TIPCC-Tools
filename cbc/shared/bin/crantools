#!/usr/bin/env bash
### CRAN tools
###
### Usage:
###  crantools [options] <command>
###
### Commands:
###  info     : Displays current R and package setup
###  list     : Lists currently running and completed checks
###  check    : Check package and all of its reverse dependencies
###  status   : Display check status
###  results  : Displays check result log files
###  summary  : Displays summary text useful for CRAN submission
###  reset    : Resets registry (delete tmp/, *.txt and ERROR/)
###  versions : List R versions for which summaries exist
###
### Example:
###  crantools check

LS_OPTS=--color=auto

cmd=help
what=
rversion=
ver=
repos=
force=false
while (( "$#" )); do
  ## Commands
  if test $1 == "--help" || test $1 == "-h"; then
    cmd=help
  fi

  if test $1 == "--rversion" || test $1 == "-r"; then
    shift
    rversion=$1
  fi

  if test $1 == "--pkgver" || test $1 == "-v"; then
    shift
    ver=$1
  fi

  if test $1 == "--github"; then
    shift
    repos=$1
  fi

  if test $1 == "--force" || test $1 == "-f"; then
    shift
    force=true
  fi

  if test $1 == "info"; then
    cmd=info
  fi

  if test $1 == "list"; then
    cmd=list
  fi

  if test $1 == "check"; then
    cmd=check
  fi

  if test $1 == "status"; then
    cmd=status
  fi

  if test $1 == "reset"; then
    cmd=reset
  fi
  
  if test $1 == "results"; then
    cmd=results
  fi

  if test $1 == "error"; then
    what=errors
    cmd=results
  fi

  if test $1 == "warn"; then
    what=warnings
    cmd=results
  fi

  if test $1 == "note"; then
    what=notes
    cmd=results
  fi

  if test $1 == "summary"; then
    cmd=summary
  fi

  if test $1 == "versions"; then
    cmd=versions
  fi

  if test $1 == "debug"; then
    cmd=debug
  fi

  shift
done

opwd=$(pwd)

# GitHub repository?
if test "$repos"; then
  echo "Downloading, building and checking R package on GitHub..."
  echo "  URL: $repos"
  branch=${repos/*@/}
  if test "$branch" == "$repos"; then
    branch="master"
  else
    repos=${repos/@*/}
  fi
  echo "  Repository: $repos"
  echo "  Branch: $branch"
  pkg=$(basename $repos)
  echo "  Package: $pkg"

  CI_ROOT=~/CI
  mkdir -p ${CI_ROOT}
  cd ${CI_ROOT}
  r-ci.sh $repos $branch
  echo $(pwd)
  cd $repos/builds/$branch/$pkg
  echo $(pwd)
  echo "Downloading, building and checking R package on GitHub...DONE"
fi


pkg=$(grep Package: DESCRIPTION | sed 's/.*:[^a-zA-Z]*//' | sed 's/[^a-zA-Z0-9.-]//g');

if test "$ver" = ""; then
  ver=$(grep Version: DESCRIPTION | sed 's/.*:[^0-9]*//' | sed 's/[^a-zA-Z0-9.-]//g');
  ##rver=$(Rscript -e "cat(gsub('-$', '', sprintf('%s%s', getRversion(), tolower(R.version[['status']]))))")
fi

rver_status=$(Rscript -e "status <- tolower(R.version[['status']]); if (regexpr('unstable', status) != -1L) status <- 'devel'; cat(status)")
rver_xyz=$(Rscript -e "cat(as.character(getRversion()))")
rver=${rver_xyz}${rver_status}
root_path=../_R-${rver}

# All available results
if test "$rversion" = ""; then
  path="../_R-*"
else
  path="../_R-*$rversion*"
fi
subdir=${pkg}_${ver}.CRAN
dirs="$(ls ${path}/* | grep ${subdir} | sed 's/://g')"


if test $cmd == "help"; then
  grep "^###" $0 | grep -v "^####" | cut -b 5-
elif test $cmd == "debug"; then
  echo "Package: ${pkg} v${ver}"
  echo "R version: ${rver}"
  echo "Variables:"
  echo "- path: ${path}"
  echo "- subdir: ${subdir}"
  echo "- dirs: ${dirs}"
elif test $cmd == "info"; then
  echo "Package: ${pkg} v${ver}"
  echo "R version: ${rver}"
  echo "Results:"
  echo "${dirs}"
elif test $cmd == "check"; then
  echo "** Launching full check:"
  echo "Package: ${pkg} v${ver}"
  echo "R version: ${rver}"
  log=".check_CRAN_${rver}.log"
  echo "Log file: $log"
  if test -d "$root_path/$subdir/checks/tmp" || test -f "$root_path/$subdir/$pkg,EmailToCRAN.txt"; then
    if test $force == "true"; then
      rm -f "$root_path/$subdir/$pkg,EmailToCRAN.txt"
      echo "Forcing"
    else
      echo "** ERROR: Another check process is already running."
      exit 1
    fi
  fi
  echo "nohup make cran > $log &"
  nohup make cran > "$log" &
elif test $cmd == "list"; then
  echo "Results:"
  echo "$dirs"
elif test $cmd == "status"; then
  for dir in ${dirs}; do
    d=$dir/checks/
    echo "Directory: $d"
    pkgC="$(ls $dir/checks*/tmp 2> /dev/null | grep .Rcheck | sed 's/.Rcheck//')"
    if test "${pkgC}" = ""; then
      rm -rf $d/tmp/
    fi
    ls ${LS_OPTS} -l $d
    if test "${pkgC}" = ""; then
      echo "Status: DONE"
    else
      echo "Status: Checking '${pkgC}'"
    fi
    echo
  done
elif test $cmd == "results"; then
  for dir in ${dirs}; do
    dir=$dir/checks
    if test "$what" = "errors"; then
      files="$dir/ERROR.log"
    elif test "$what" = "warnings"; then
      files="$dir/WARNING.log"
    elif test "$what" = "notes"; then
      files="$dir/NOTE*.log"
    elif test "$what" = ""; then
      files="$dir/ERROR.log $dir/WARNING.log $dir/NOTE*.log"
    fi
    for file in $files; do
      if test -f $file; then
        d=${file/.log/}
        if test -d "$d"; then
          more $file
	else
          rm $file
        fi
      fi
    done
  done
elif test $cmd == "summary"; then
  for dir in ${dirs}; do
    echo ------------------------------------------------------------------
    more $dir/$pkg,EmailToCRAN.txt
    echo
  done
elif test $cmd == "reset"; then
    for dir in ${dirs}; do
      rm $dir/$pkg,EmailToCRAN.txt
      rm -rf $dir/checks/tmp
      rm -rf $dir/checks/ERROR
    done
elif test $cmd == "versions"; then
  for dir in ${dirs}; do
    grep "^* R " $dir/$pkg,EmailToCRAN.txt | grep -F "Platform: "
  done
fi


cd ${opwd}


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# HISTORY:
# 2015-01-06
# o Added 'crantools debug'.
# 2014-10-15
# o Added 'crantools --force check'.
# 2014-10-07
# o Created by Henrik Bengtsson.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


