#!/usr/bin/env bash
### CRAN tools
###
### Usage:
###  crantools [options] <command>
###
### Commands:
###  info    : Displays current R and package setup
###  list    : Lists currently running and completed checks
###  check   : Check package and all of its reverse dependencies
###  status  : Display check status
###  results : Displays check result log files
###  summary : Displays summary text useful for CRAN submission
###
### Example:
###  crantools check

cmd=help
what=
rversion=
force=false
while (( "$#" )); do
  ## Commands
  if test $1 == "--help" || test $1 == "-h"; then
    cmd=help
  fi

  if test $1 == "--rversion" || test $1 == "-r"; then
    shift
    rversion=$1
  fi

  if test $1 == "--force" || test $1 == "-f"; then
    shift
    force=true
  fi

  if test $1 == "info"; then
    cmd=info
  fi

  if test $1 == "list"; then
    cmd=list
  fi

  if test $1 == "check"; then
    cmd=check
  fi

  if test $1 == "status"; then
    cmd=status
  fi

  if test $1 == "results"; then
    cmd=results
  fi

  if test $1 == "error"; then
    what=errors
    cmd=results
  fi

  if test $1 == "warn"; then
    what=warnings
    cmd=results
  fi

  if test $1 == "note"; then
    what=notes
    cmd=results
  fi

  if test $1 == "summary"; then
    cmd=summary
  fi

  shift
done

pkg=$(grep Package: DESCRIPTION | sed 's/.*:[^a-zA-Z]*//' | sed 's/[^a-zA-Z0-9.-]//g');
ver=$(grep Version: DESCRIPTION | sed 's/.*:[^0-9]*//' | sed 's/[^a-zA-Z0-9.-]//g');
##rver=$(Rscript -e "cat(gsub('-$', '', sprintf('%s%s', getRversion(), tolower(R.version[['status']]))))")

rver_status=$(Rscript -e "status <- tolower(R.version[['status']]); if (regexpr('unstable', status) != -1L) status <- 'devel'; cat(status)")
rver_xyz=$(Rscript -e "cat(as.character(getRversion()))")
rver=${rver_xyz}${rver_status}
root_path=../_R-${rver}

# All available results
if test "$rversion" = ""; then
  path="../_R-*"
else
  path="../_R-*$rversion*"
fi
subdir=${pkg}_${ver}.CRAN
dirs="$(ls ${path}/* | grep ${subdir} | sed 's/://g')"


if test $cmd == "help"; then
  grep "^###" $0 | grep -v "^####" | cut -b 5-
elif test $cmd == "info"; then
  echo "Package: ${pkg} v${ver}"
  echo "R version: ${rver}"
  echo "Results:"
  echo "${dirs}"
elif test $cmd == "check"; then
  echo "** Launching full check:"
  echo "Package: ${pkg} v${ver}"
  echo "R version: ${rver}"
  log=".check_CRAN_${rver}.log"
  echo "Log file: $log"
  if test -d "$root_path/$subdir/checks/tmp" || test -f "$root_path/$subdir/$pkg,EmailToCRAN.txt"; then
    if $force == "true"; then
      rm -f "$root_path/$subdir/$pkg,EmailToCRAN.txt"
      echo "Forcing"
    else
      echo "** ERROR: Another check process is already running."
      exit 1
    fi
  fi
  echo "nohup make cran > $log &"
  nohup make cran > "$log" &
elif test $cmd == "list"; then
  echo "Results:"
  echo "$dirs"
elif test $cmd == "status"; then
  for dir in ${dirs}; do
    d=$dir/checks/
    echo "Directory: $d"
    ls --color=auto -l $d
    pkgC="$(ls $dir/checks*/tmp | grep .Rcheck | sed 's/.Rcheck//')"
    if test "${pkgC}" = ""; then
      echo "Status: DONE"
    else
      echo "Status: Checking '${pkgC}'"
    fi
    echo
  done
elif test $cmd == "results"; then
  for dir in ${dirs}; do
    dir=$dir/checks
    if test "$what" = "errors"; then
      files="$dir/ERROR.log"
    elif test "$what" = "warnings"; then
      files="$dir/WARNING.log"
    elif test "$what" = "notes"; then
      files="$dir/NOTE*.log"
    elif test "$what" = ""; then
      files="$dir/ERROR.log $dir/WARNING.log $dir/NOTE*.log"
    fi
    more $files
  done
elif test $cmd == "summary"; then
  for dir in ${dirs}; do
    echo ------------------------------------------------------------------
    more $dir/$pkg,EmailToCRAN.txt
    echo
  done
fi


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# HISTORY:
# 2014-10-15
# o Added 'crantools --force check'.
# 2014-10-07
# o Created by Henrik Bengtsson.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


