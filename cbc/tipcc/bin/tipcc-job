#!/usr/bin/env bash
### UCSF HPC TIPCC:
### Information on a job
###
### Usage:
###  tipcc-job <id> [options]
###
### Options:
###  --help              This help
###
### Example:
###  tipcc-job 876066
###
### Version: 0.1.0-9000
### Copyright: Henrik Bengtsson (2017)
### License: GPL (>= 2.1) [https://www.gnu.org/licenses/gpl.html]
call="$0 $*"
tool_name=$(basename $0)
if [[ ${TIPCC_TOOLS} -ne 0 ]]; then
    tool_name=${tool_name/-/ }
fi

function mecho() { echo "$@" 1>&2; }

function merror() {
    mecho "ERROR in '${tool_name}': $*"
    exit 1
}

function as_logical() {
    if [[ $1 == "false" || $1 == "0" ]]; then echo 0; else echo 1; fi
}

function help() {
    local res=$(grep -E "^###( .*|)$" $0 | cut -b 5-)
    local search=$(basename $0)
    if [[ "${search}" != "${tool_name}" ]]; then
        res=$(printf '%s\n' "${res[@]}" | sed "s/${search}/${tool_name}/g")
    fi
    printf '%s\n' "${res[@]}"
}

function whatis() {
    local res=$(grep "^### .*[^:][[:space:]]*$" $0 | head -1 | cut -b 5-)
    printf '%s\n' "${res[@]}"
}

function version() {
    grep -E "^###[ ]*Version:[ ]*" $0 | sed 's/###[ ]*Version:[ ]*//g'
}



## Adopted from https://superuser.com/a/784102/252195
function pidtree() (
    [ -n "$ZSH_VERSION"  ] && setopt shwordsplit
    declare -A CHILDS
    while read P PP; do
        CHILDS[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    walk() {
        echo $1
        for i in ${CHILDS[$1]}; do
            walk $i
        done
    }

    for i in "$@"; do
       walk $i
    done
)
        
debug=false
jid=
status=true
full=
logs=


# Parse command-line options
while [[ $# > 0 ]]; do
    if [[ "$1" == "--path" ]]; then
        shift
        path="$1"
    elif [[ "$1" == "--status" ]]; then
        status=true
    elif [[ "$1" == "--full" ]]; then
        full=true
    elif [[ "$1" == "--logs" ]]; then
        logs=true
    elif [[ "$1" == "--help" ]]; then
        help
        exit 0
    elif [[ "$1" == "--whatis" ]]; then
        whatis
        exit 0
    elif [[ "$1" == "--version" ]]; then
        version
        exit 0
    else
        jid="$1"
    fi
    shift
done

if [[ -z "$jid" ]]; then
    help
    mecho
    merror "Job ID is missing!"
fi


echo "# Job ${jid}"
date +"on %Y-%m-%d %H:%M:%S"
echo

echo "## Call"
echo '```sh'
echo "{$HOSTNAME}$ $call"
echo '```'
echo

echo "## Job Details (according to TORQUE)"

echo '```'
echo "$ qstat -n -1 -t ${jid}"
qstat -n -1 -t ${jid}
echo '```'
echo
echo '```'
echo "$ qstat -f ${jid}"
qstat -f ${jid}
echo '```'
echo

echo "## Session Details"
echo
session_id=$(qstat -f ${jid} | grep -F "session_id = " | sed -E 's/.*session_id = //')
echo "Session process ID: ${session_id}"
child_ids=$(pidtree $session_id)
echo "Process IDs: (n=$(echo $child_ids | wc -w)) $(echo $child_ids | tr $'\n' ' ')"
echo

echo "### Process Details"
pattern="($(echo $child_ids | sed 's/ /|/g')|^USER)"
echo '```'
ps aux | grep -E "$pattern" | grep -vF "grep -E $pattern"
echo
echo '```'
echo

echo "### Process Tree"
echo '```'
echo "$ ps --forest -o pid,tty,stat,time,cmd -g $session_id"
ps --forest -o pid,tty,stat,time,cmd -g $session_id
echo '```'
echo
echo "<details>"  
echo "<pre>"
echo "$ pstree -anclpUh $session_id"
pstree -anclpUh $session_id
echo "</pre>"
echo "</details>"  
echo
