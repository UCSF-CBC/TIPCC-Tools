#!/usr/bin/env bash
### UCSF HPC TIPCC:
### Cluster Ganglia API
###
### Usage:
###  tipcc-ganglia <command> [options]
###
### Commands:
###  graphs              Download graphs.
###
### Options:
###  --node <integer>    Node to inspect. [required]
###  --since <string>    Time period; hour, day (default), week, month, year.
###  --zoom <string>     Zoom of graphs downloaded; small, medium (default), large.
###  --path <string>     Directory where to download graphs. Default is figures/
###
###  --help              This help
###
### Example:
###  tipcc-ganglia graphs --node 13
###
### Version: 0.1.0-9000
### Copyright: Henrik Bengtsson (2017)
### License: GPL (>= 2.1) [https://www.gnu.org/licenses/gpl.html]
call="$0 $*"
tool_name=$(basename $0)
if [[ ${TIPCC_TOOLS} -ne 0 ]]; then
    tool_name=${tool_name/-/ }
fi

function mecho() { echo "$@" 1>&2; }

function merror() {
    mecho "ERROR in '${tool_name}': $*"
    exit 1
}

function as_logical() {
    if [[ $1 == "false" || $1 == "0" ]]; then echo 0; else echo 1; fi
}

function help() {
    local res=$(grep -E "^###( .*|)$" $0 | cut -b 5-)
    local search=$(basename $0)
    if [[ "${search}" != "${tool_name}" ]]; then
        res=$(printf '%s\n' "${res[@]}" | sed "s/${search}/${tool_name}/g")
    fi
    printf '%s\n' "${res[@]}"
}

function whatis() {
    local res=$(grep "^### .*[^:][[:space:]]*$" $0 | head -1 | cut -b 5-)
    printf '%s\n' "${res[@]}"
}

function version() {
    grep -E "^###[ ]*Version:[ ]*" $0 | sed 's/###[ ]*Version:[ ]*//g'
}


path=figures
debug=false
command=graphs
node=
since=day
zoom=medium

# Parse command-line options
while [[ $# > 0 ]]; do
    if [[ "$1" == "graphs" ]]; then
        command="graphs"
    elif [[ "$1" == "--node" ]]; then
        shift
        node="$1"
    elif [[ "$1" == "--since" ]]; then
        shift
        since="$1"
    elif [[ "$1" == "--zoom" ]]; then
        shift
        zoom="$1"
    elif [[ "$1" == "--path" ]]; then
        shift
        path="$1"
    elif [[ "$1" == "--help" ]]; then
        help
        exit 0
    elif [[ "$1" == "--whatis" ]]; then
        whatis
        exit 0
    elif [[ "$1" == "--version" ]]; then
        version
        exit 0
    else
        extras="$extras $1"
    fi
    shift
done

if [[ -z "$command" ]]; then
    help
    mecho
    merror "Command not specified"
fi

if [[ -z "$node" ]]; then
    help
    mecho
    merror "Argument --node <node number> must be specified, e.g. --node 13"
fi

## Drop prefix n, e.g. 'n13' -> '13'
if [[ "$node" == "master" ]]; then
    node=-1
else
    node=$(echo "$node" | sed -E 's/^n//g')
fi


if [[ "$command" == "graphs" ]]; then
    mkdir -p "${path}"

    ## Download all graphs
    mecho "Downloading Ganglia graphs ..."
    mecho " - output folder: ${path}"
    mecho " - node: ${node}"
    mecho " - since: ${since}"
    mecho " - zoom: ${zoom}"
    for ff in load mem cpu network packet; do
        mecho " - downloading graph: '$ff'"
	wget "http://cclc01.ucsf.edu/ganglia/graph.php?c=cclc01&h=.${node}&m=load_one&r=${since}&s=descending&z=${zoom}&g=${ff}_report" -O "${path}/node=${node},what=${ff},since=${since},zoom=${zoom}.png"
    done
    mecho "Downloading Ganglia graphs ... done"
fi
